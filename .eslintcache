[{"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\index.js":"1","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\App.js":"2","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\reportWebVitals.js":"3","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Home.js":"4","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Contact.js":"5","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\About.js":"6","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Common.js":"7","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Navbar.js":"8","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Card.js":"9","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Sdata.js":"10","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Login.js":"11","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Register.js":"12","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Partners.js":"13","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Invest.js":"14","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Blog.js":"15","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\UserDashboard.js":"16","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\sidebar\\Sidebar.js":"17","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\navbar\\Navbar.js":"18","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\Main.js":"19","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\charts\\Chart.js":"20","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\PaymentButton.js":"21","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\PaymentContacts.js":"22","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\PaymentMerchants.js":"23","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\FinalPaymentContact.js":"24","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\ErrorPage.js":"25","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\FinalPaymentMerchant.js":"26","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\SuccessPayment.js":"27","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\config.js":"28","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\LoginNavbar.js":"29","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\TransactionHistory.js":"30","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\TransactionHistoryData.js":"31","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Expenditure.js":"32","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\ExpenditureData.js":"33","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Saving.js":"34","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\SavingData.js":"35","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Query.js":"36","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\QueryData.js":"37","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Setting.js":"38","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\SettingData.js":"39"},{"size":582,"mtime":1616428921725,"results":"40","hashOfConfig":"41"},{"size":2465,"mtime":1616605292125,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":645,"mtime":1617260763637,"results":"44","hashOfConfig":"41"},{"size":2012,"mtime":1618686447259,"results":"45","hashOfConfig":"41"},{"size":687,"mtime":1617260650656,"results":"46","hashOfConfig":"41"},{"size":1287,"mtime":1612416196144,"results":"47","hashOfConfig":"41"},{"size":3592,"mtime":1616429608271,"results":"48","hashOfConfig":"41"},{"size":530,"mtime":1612413832147,"results":"49","hashOfConfig":"41"},{"size":377,"mtime":1612413808882,"results":"50","hashOfConfig":"41"},{"size":2683,"mtime":1618685533156,"results":"51","hashOfConfig":"41"},{"size":4653,"mtime":1618587451176,"results":"52","hashOfConfig":"41"},{"size":1087,"mtime":1617262338807,"results":"53","hashOfConfig":"41"},{"size":717,"mtime":1617260797439,"results":"54","hashOfConfig":"41"},{"size":617,"mtime":1617260690563,"results":"55","hashOfConfig":"41"},{"size":728,"mtime":1614837791060,"results":"56","hashOfConfig":"41"},{"size":4721,"mtime":1617262404052,"results":"57","hashOfConfig":"41"},{"size":1674,"mtime":1616605447652,"results":"58","hashOfConfig":"41"},{"size":3160,"mtime":1616659210596,"results":"59","hashOfConfig":"41"},{"size":848,"mtime":1614793665701,"results":"60","hashOfConfig":"41"},{"size":1658,"mtime":1614852113761,"results":"61","hashOfConfig":"41"},{"size":6484,"mtime":1617263791522,"results":"62","hashOfConfig":"41"},{"size":9766,"mtime":1617819943510,"results":"63","hashOfConfig":"41"},{"size":2569,"mtime":1617264107000,"results":"64","hashOfConfig":"41"},{"size":670,"mtime":1616042396623,"results":"65","hashOfConfig":"41"},{"size":3261,"mtime":1617826213631,"results":"66","hashOfConfig":"41"},{"size":466,"mtime":1616515069471,"results":"67","hashOfConfig":"41"},{"size":225,"mtime":1616523562074,"results":"68","hashOfConfig":"41"},{"size":3937,"mtime":1616429466678,"results":"69","hashOfConfig":"41"},{"size":792,"mtime":1616591756854,"results":"70","hashOfConfig":"41"},{"size":4800,"mtime":1616656390576,"results":"71","hashOfConfig":"41"},{"size":757,"mtime":1616591763480,"results":"72","hashOfConfig":"41"},{"size":4297,"mtime":1616659009675,"results":"73","hashOfConfig":"41"},{"size":732,"mtime":1616593471220,"results":"74","hashOfConfig":"41"},{"size":4252,"mtime":1616658807199,"results":"75","hashOfConfig":"41"},{"size":727,"mtime":1616593929505,"results":"76","hashOfConfig":"41"},{"size":3240,"mtime":1617264317412,"results":"77","hashOfConfig":"41"},{"size":737,"mtime":1616605249698,"results":"78","hashOfConfig":"41"},{"size":8758,"mtime":1616651565831,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"klemuz",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":9,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":5,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":10,"source":"168","usedDeprecatedRules":"82"},"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\index.js",[],["169","170"],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\App.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\reportWebVitals.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Home.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Contact.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\About.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Common.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Navbar.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Card.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Sdata.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Login.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Register.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Partners.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Invest.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Blog.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\UserDashboard.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\sidebar\\Sidebar.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\navbar\\Navbar.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\Main.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\charts\\Chart.js",[],["171","172"],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\PaymentButton.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\PaymentContacts.js",["173","174","175","176","177","178"],"import React, { useState, useEffect } from 'react';\r\nimport PhoneInput from \"react-phone-number-input/input\";\r\nimport 'react-phone-number-input/style.css';\r\nimport Select from 'react-select';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport Navbar from '../Navbar';\r\nimport LoginNavbar from '../LoginNavbar';\r\n\r\nconst PaymentContacts = () => {\r\n\r\n\tvar navChoice;\r\n\r\n\tif (Cookies.get(\"user\")) { \r\n\t\tnavChoice = <LoginNavbar />;\r\n\t}\r\n\telse {\r\n\t\tnavChoice = <Navbar />;\r\n\t}\t\r\n\r\n    const user_id = Cookies.get(\"user\");\r\n\r\n    const [data, setData] = useState({\r\n    \tphonenum:'',\r\n    \tamount:'',\r\n    \tcategory:'',\r\n    \tcategory_id:'',\r\n    \tpercentage:'',\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [categdata, setCategdata] = useState({});\r\n\r\n    const categoptions = [];\r\n    let categmap = new Map(); \r\n\r\n    async function get_category() {\r\n\t    const res = fetch(`/list/category?userid=${user_id}`, {\r\n\t\t\t\t  method: 'GET',\r\n\t\t\t\t  headers: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t  },\r\n\t\t\t  });\r\n\r\n\t    res.then(response => response.json()).then(data => setCategdata(data));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\t  get_category();\r\n\r\n\t}, []);\r\n\r\n    for(var itr = 0; itr < categdata.length; ++itr)\r\n    { \r\n       categoptions.push({label: categdata[itr].category_name, value: categdata[itr].percentage});\r\n       categmap.set(categdata[itr].category_name, categdata[itr].category_id);\r\n    }\r\n\r\n    const InputEventAmount = (event) => {\r\n      \r\n      const { name, value } = event.target;\r\n\r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [name]: value,\r\n          };\r\n\r\n      });\r\n\r\n    };\r\n\r\n    const InputEventCategory = (event) => {\r\n      \r\n      const { label, value } = event;\r\n      \r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [\"category\"]: label,\r\n          \t  [\"percentage\"]: value + '%',\r\n          \t  [\"category_id\"]: categmap.get(label),\r\n          };\r\n      });\r\n\r\n    };\r\n\r\n    const InputEventPhone = (event) => {\r\n\r\n      const value = event;\r\n\r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [\"phonenum\"]: value,\r\n          };\r\n\r\n      });\r\n\r\n    };\r\n\r\n\r\n    const formSubmit = (e) => {\r\n\r\n\t  e.preventDefault();\r\n\r\n\t  if(data.phonenum.length != 13)\r\n\t  alert(`Invalid Phone Number`);\r\n      else\r\n      { \r\n\t\t  const valid_phone = fetch(`/validate/phone_number?phone_no=${data.phonenum}`, {\r\n\t\t\t\t\t  method: 'GET',\r\n\t\t\t\t\t  headers: {\r\n\t\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t  },\r\n\t\t\t\t  });\r\n\r\n\t\t  valid_phone.then(function(value) { \r\n\t                \r\n\t\t\t\t  \tif(value.ok)\r\n\t\t\t  \t\t{ \r\n\t\t\t\t\t\t  const res = fetch(\"/confirm/payment_nonmerchant\", {\r\n\t\t\t\t\t\t\t  method: 'POST',\r\n\t\t\t\t\t\t\t  headers: {\r\n\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t\t\t  },\r\n\t\t\t\t\t\t\t  body: JSON.stringify({\r\n\t\t\t\t\t\t\t  \t     userid: user_id,\r\n\t\t\t\t\t\t\t\t\t amount: data.amount,\r\n\t\t\t\t\t\t\t\t\t currency: \"INR\",\r\n\t\t\t\t\t\t\t\t\t payment_category_id: data.category_id,\r\n\t\t\t\t\t\t\t\t\t percentage_category: data.percentage,\r\n\t\t\t\t\t\t\t\t\t phone_number: data.phonenum\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t  });\r\n\r\n\t\t\t  \t\t     res.then(function(value) {\r\n\r\n\t\t\t\t\t\t  \t if(value.ok)\r\n\t\t\t\t\t  \t\t { \r\n\t\t\t\t\t\t\t    return value.json();  \r\n\t\t\t\t\t  \t\t }\r\n\t\t\t\t\t  \t\t else\r\n\t\t\t\t\t  \t\t {\r\n\t\t  \t\t   \t\t  \t\t  let path = \"/error\"; \r\n\t\t\t\t\t\t\t\t  history.push(path);\r\n\t\t\t\t\t  \t\t }\r\n\r\n\t\t\t\t      }).then(res_data => {\r\n\r\n\r\n\t\t\t\t\t\t        history.push({\r\n\t\t\t\t\t\t\t\t\t  pathname: '/FinalPaymentContact',\r\n\t\t\t\t\t\t\t\t\t  state: [{name: res_data.payee_fullname,\r\n\t\t\t\t\t\t\t\t\t           phone_number: data.phonenum,\r\n\t\t\t\t\t\t\t\t\t           upi_id: res_data.upi_id,\r\n\t\t\t\t\t\t\t\t\t           category: data.category,\r\n\t\t\t\t\t\t\t\t\t           saving: data.percentage,\r\n\t\t\t\t\t\t\t\t\t           amount: res_data.amount/100,\r\n\t\t\t\t\t\t\t\t\t           order_id: res_data.order_id,\r\n   \t\t\t\t\t\t\t\t\t           username: res_data.fullname,\r\n\t\t\t\t\t\t\t\t\t           email: res_data.email,\r\n\t\t\t\t\t\t\t\t\t           contact: res_data.contact\r\n\t\t\t\t\t\t\t\t\t         }]\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t      });\r\n\r\n\r\n\t\t  \t\t} \r\n                \r\n\t\t\t  \t\telse\r\n\t\t\t  \t\t{\r\n\t\t\t  \t\t  alert(`User Does not Exist`);\t\r\n\t\t\t  \t\t}\r\n\r\n\t\t      });  \t\r\n\r\n      }\r\n\r\n\t  // rzp1.open();\r\n      \r\n};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    {navChoice}\r\n\t\t\t<div className=\"my-5\">\r\n\t\t\t\t<h1 className=\"text-center\"> Payment to Contacts </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container contact_div\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-6 col-10 mx-auto\">\r\n\t\t\t\t\t\t<form onSubmit={formSubmit}>\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label for=\"exampleFormControlInput1\" className=\"form-label\"> Payee Phone Number </label>\r\n\t\t\t\t\t\t\t  <PhoneInput \r\n\t\t\t\t\t\t\t     className=\"form-control\" \r\n\t\t\t\t\t\t\t     id=\"exampleFormControlInput1\"\r\n\t\t\t\t\t\t\t     name=\"phonenum\"\r\n\t\t\t\t\t\t\t     country=\"IN\"\r\n\t\t\t\t\t\t\t     value={data.phonenum}\r\n\t\t\t\t\t\t\t     onChange={InputEventPhone} \r\n\t\t\t\t\t\t\t     placeholder=\"Phone Number of Payee\" \r\n\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t  </div>\r\n  \t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label for=\"exampleFormControlInput1\" className=\"form-label\"> Amount </label>\r\n\t\t\t\t\t\t\t  <input \r\n\t\t\t\t\t\t\t     type=\"number\"\r\n\t\t\t\t\t\t\t     className=\"form-control\" \r\n\t\t\t\t\t\t\t     id=\"exampleFormControlInput1\"\r\n\t\t\t\t\t\t\t     name=\"amount\"\r\n\t\t\t\t\t\t\t     value={data.amount}\r\n\t\t\t\t\t\t\t     onChange={InputEventAmount} \r\n\t\t\t\t\t\t\t     placeholder=\"Amount (in INR)\" \r\n\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label className=\"form-label\"> Category </label>\r\n\t\t\t\t\t\t\t    <Select \r\n\t\t\t\t\t\t\t     options={categoptions} \r\n\t\t\t\t\t\t\t     onChange={InputEventCategory}\r\n \t\t\t\t\t\t\t     value={categoptions.filter(function(option) {\r\n\t\t\t\t\t\t          return option.label === data.category;\r\n\t\t\t\t\t\t         })} \r\n\t\t\t\t\t\t\t     placeholder=\"Category\"\r\n\t\t\t\t\t\t\t     label=\"Single select\"\r\n\t\t\t\t\t\t\t    />\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label for=\"exampleFormControlInput1\" className=\"form-label\"> Savings Percentage </label>\r\n\t\t\t\t\t\t\t  <input \r\n\t\t\t\t\t\t\t     type=\"text\" \r\n\t\t\t\t\t\t\t     className=\"form-control\" \r\n\t\t\t\t\t\t\t     id=\"exampleFormControlInput1\"\r\n\t\t\t\t\t\t\t     value={data.percentage}\r\n\t\t\t\t\t\t\t     placeholder=\"Percentage\"\r\n\t\t\t\t\t\t\t     readonly=\"readonly\" \r\n\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t  </div>\r\n\r\n\t\t\t\t\t\t  <div className=\"col-12\">\r\n\t\t\t\t\t\t\t  <button className=\"btn btn-outline-primary\" type=\"submit\"> Confirm Payment </button>\r\n\t\t\t\t\t\t  </div>\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PaymentContacts;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\PaymentMerchants.js",["179","180","181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport Navbar from '../Navbar';\r\nimport LoginNavbar from '../LoginNavbar';\r\n\r\nconst PaymentMerchants = () => {\r\n\r\n\tvar navChoice;\r\n\r\n\tif (Cookies.get(\"user\")) { \r\n\t\tnavChoice = <LoginNavbar />;\r\n\t}\r\n\telse {\r\n\t\tnavChoice = <Navbar />;\r\n\t}\t\r\n\r\n    const user_id = Cookies.get(\"user\");\t\r\n\r\n    const [data, setData] = useState({\r\n    \tmerchant:'',\r\n    \tmerchant_id:'',\r\n    \tamount:'',\r\n    \tcategory:'',\r\n    \tcategory_id:'',\r\n    \tpercentage:'',\r\n    \tcoupon:'',\r\n    \tcoupon_id:'',\r\n    \tcode:'',\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [categdata, setCategdata] = useState({});\r\n\r\n    const categoptions = [];\r\n    let categmap = new Map(); \r\n\r\n    async function get_category() {\r\n\t    const res = fetch(`/list/category?userid=${user_id}`, {\r\n\t\t\t\t  method: 'GET',\r\n\t\t\t\t  headers: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t  },\r\n\t\t\t  });\r\n\r\n\t    res.then(response => response.json()).then(data => setCategdata(data));\r\n\r\n    }\r\n\r\n    const [merchdata, setMerchdata] = useState({});\r\n\r\n    const merchoptions = [];\r\n\r\n    async function get_merchants() {\r\n\t    const res = fetch(\"/list/merchant\", {\r\n\t\t\t\t  method: 'GET',\r\n\t\t\t\t  headers: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t  },\r\n\t\t\t  });\r\n\r\n\t    res.then(response => response.json()).then(data => setMerchdata(data));\r\n\r\n    }\r\n\r\n    const [coupondata, setCoupondata] = useState({});\r\n    const [couponoptions, setCouponoptions] = useState([{}]);\r\n    const [couponmap, setCouponmap] = useState(new Map());\r\n\r\n    async function get_coupons(merchantid) {\r\n\t    const res = await fetch(`/list/coupon?merchant_id=${merchantid}`, {\r\n\t\t\t\t  method: 'GET',\r\n\t\t\t\t  headers: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t  },\r\n\t\t\t  });\r\n\r\n\t    return await res.json();\r\n\r\n\t    // res.then(response => await response.json()).then(data => setCoupondata(data));\r\n\t    // .then(coupondata => {\r\n\t\t   //  const couponoptions_temp = [];\r\n\t\t   //  for(var itr = 0; itr < coupondata.length; ++itr)\r\n\t\t   //  couponoptions_temp.push({label: coupondata[itr].coupon_desc, value: coupondata[itr].coupon_code});\r\n\r\n\t\t   //  setCouponoptions(couponoptions_temp);\r\n\t    // })\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\t  get_category();\r\n\t  get_merchants();\r\n\r\n\t}, []);\r\n    \r\n    for(var itr = 0; itr < categdata.length; ++itr)\r\n    { \r\n       categoptions.push({label: categdata[itr].category_name, value: categdata[itr].percentage});\r\n       categmap.set(categdata[itr].category_name, categdata[itr].category_id);\r\n    }\r\n\r\n    for(var itr = 0; itr < merchdata.length; ++itr)\r\n    merchoptions.push({label: merchdata[itr].merchant_name, value: merchdata[itr].merchant_id}); \t\r\n\r\n    // const couponoptions = [\r\n    //   {label: \"Pepsi 20% off\", value: \"PEPSI20\"},\r\n    //   {label: \"Flat 50% off\", value: \"FLAT50\"},  \r\n    // ]\r\n\r\n    const InputEventAmount = (event) => {\r\n      \r\n      const { name, value } = event.target;\r\n\r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [name]: value,\r\n          };\r\n\r\n      });\r\n\r\n    };\r\n\r\n    const InputEventMerchant = async (event) => {\r\n      \r\n      const { label, value } = event;\r\n      \r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [\"merchant\"]: label,\r\n          \t  [\"merchant_id\"]: value,\r\n          };\r\n      });\r\n\r\n  \t  const couponoptions_temp = [];\r\n\t  const couponmap_temp = new Map();\r\n\r\n  \t  setCouponoptions(couponoptions_temp);\r\n\t  setCouponmap(couponmap_temp);\r\n\t  \r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [\"code\"]: '',\r\n          };\r\n      });\r\n\r\n\t  const coupondata_temp = await get_coupons(value);\r\n\t  setCoupondata(coupondata_temp);\r\n\r\n      for(var itr = 0; itr < coupondata_temp.length; ++itr)\r\n\t  {\r\n\t  \tcouponoptions_temp.push({label: coupondata_temp[itr].coupon_desc, value: coupondata_temp[itr].coupon_code});\r\n\t  \tcouponmap_temp.set(coupondata_temp[itr].coupon_code, coupondata_temp[itr].coupon_id);\r\n\t  }\r\n\r\n\t  setCouponoptions(couponoptions_temp);\r\n\t  setCouponmap(couponmap_temp); \r\n      \r\n    };\r\n\r\n    const InputEventCategory = (event) => {\r\n      \r\n      const { label, value } = event;\r\n      \r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [\"category\"]: label,\r\n          \t  [\"percentage\"]: value + '%',\r\n          \t  [\"category_id\"]: categmap.get(label),\r\n          };\r\n      });\r\n\r\n    };\r\n\r\n    const InputEventCoupons = (event) => {\r\n      \r\n      const { label, value } = event;\r\n\r\n      setData((preVal) => {\r\n          return {\r\n          \t  ...preVal,\r\n          \t  [\"coupon\"]: label,\r\n          \t  [\"coupon_id\"]: couponmap.get(value),\r\n          \t  [\"code\"]: value,\r\n          };\r\n      });\r\n\r\n\r\n    };    \r\n    \r\n\r\n    const formSubmit = (e) => {\r\n\r\n\t  e.preventDefault();\r\n\r\n\t  const valid_coupon = fetch(`/validate/coupon?coupon_id=${data.coupon_id}`, {\r\n\t\t\t\t  method: 'GET',\r\n\t\t\t\t  headers: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t  },\r\n\t\t\t  });\r\n\r\n\t  valid_coupon.then(function(value) { \r\n                \r\n\t\t\t  \tif(value.ok)\r\n\t\t  \t\t{ \r\n\t\t  \t\t\t  const percentage = data.percentage.slice(0, -1)  \r\n\t\t\t\t\t  const res = fetch(\"/confirm/payment/merchant\", {\r\n\t\t\t\t\t\t  method: 'POST',\r\n\t\t\t\t\t\t  headers: {\r\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t\t  },\r\n\t\t\t\t\t\t  body: JSON.stringify({\r\n\t\t\t\t\t\t  \t     userid: user_id,\r\n\t\t\t\t\t\t\t\t amount: data.amount,\r\n\t\t\t\t\t\t\t\t currency: \"INR\",\r\n\t\t\t\t\t\t\t\t payment_category_id: data.category_id,\r\n\t\t\t\t\t\t\t\t category_percentage: percentage,\r\n\t\t\t\t\t\t\t\t merchant_id: data.merchant_id,\r\n\t\t\t\t\t\t\t\t coupon_id: data.coupon_id\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t  });\r\n\r\n\t\t  \t\t     res.then(function(value) { \r\n                \r\n\t\t\t\t\t\t  \t if(value.ok)\r\n\t\t\t\t\t  \t\t { \r\n\t\t\t\t\t\t\t    return value.json();  \r\n\t\t\t\t\t  \t\t }\r\n\t\t\t\t\t  \t\t else\r\n\t\t\t\t\t  \t\t {\r\n\t\t  \t\t   \t\t  \t\t  let path = \"/error\"; \r\n\t\t\t\t\t\t\t\t  history.push(path);\r\n\t\t\t\t\t  \t\t }\r\n\r\n\t\t\t\t      }).then(res_data => {\r\n\r\n\r\n\t\t\t\t\t\t        history.push({\r\n\t\t\t\t\t\t\t\t\t  pathname: '/FinalPaymentMerchant',\r\n\t\t\t\t\t\t\t\t\t  state: [{name: data.merchant,\r\n\t\t\t\t\t\t\t\t\t           category: data.category,\r\n\t\t\t\t\t\t\t\t\t           saving: data.percentage,\r\n\t\t\t\t\t\t\t\t\t           amount: res_data.amount/100,\r\n\t\t\t\t\t\t\t\t\t           order_id: res_data.order_id,\r\n\t\t\t\t\t\t\t\t\t           username: res_data.fullname,\r\n\t\t\t\t\t\t\t\t\t           email: res_data.email,\r\n\t\t\t\t\t\t\t\t\t           contact: res_data.contact\r\n\t\t\t\t\t\t\t\t\t         }]\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t      });\r\n\r\n\r\n\t\t  \t\t}\r\n\t\t  \t\telse\r\n\t\t  \t\t{\r\n\t\t  \t\t  alert(`Invalid Coupon`);\t\r\n\t\t  \t\t}\r\n\r\n\t      });\r\n\r\n};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    {navChoice}\r\n\t\t\t<div className=\"my-5\">\r\n\t\t\t\t<h1 className=\"text-center\"> Payment to Merchants </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container contact_div\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-6 col-10 mx-auto\">\r\n\t\t\t\t\t\t<form onSubmit={formSubmit}>\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label className=\"form-label\"> Merchant Name </label>\r\n\t\t\t\t\t\t\t    <Select \r\n\t\t\t\t\t\t\t     options={merchoptions} \r\n\t\t\t\t\t\t\t     onChange={InputEventMerchant}\r\n \t\t\t\t\t\t\t     value={merchoptions.filter(function(option) {\r\n\t\t\t\t\t\t          return option.label === data.merchant;\r\n\t\t\t\t\t\t         })} \r\n\t\t\t\t\t\t\t     placeholder=\"Name of Merchant\"\r\n\t\t\t\t\t\t\t     label=\"Single select\"\r\n\t\t\t\t\t\t\t    />\r\n\t\t\t\t\t\t  </div>\r\n  \t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label for=\"exampleFormControlInput1\" className=\"form-label\"> Amount </label>\r\n\t\t\t\t\t\t\t  <input \r\n\t\t\t\t\t\t\t     type=\"number\"\r\n\t\t\t\t\t\t\t     className=\"form-control\" \r\n\t\t\t\t\t\t\t     id=\"exampleFormControlInput1\"\r\n\t\t\t\t\t\t\t     name=\"amount\"\r\n\t\t\t\t\t\t\t     value={data.amount}\r\n\t\t\t\t\t\t\t     onChange={InputEventAmount} \r\n\t\t\t\t\t\t\t     placeholder=\"Amount (in INR)\" \r\n\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label className=\"form-label\"> Category </label>\r\n\t\t\t\t\t\t\t    <Select \r\n\t\t\t\t\t\t\t     options={categoptions} \r\n\t\t\t\t\t\t\t     onChange={InputEventCategory}\r\n \t\t\t\t\t\t\t     value={categoptions.filter(function(option) {\r\n\t\t\t\t\t\t          return option.label === data.category;\r\n\t\t\t\t\t\t         })} \r\n\t\t\t\t\t\t\t     placeholder=\"Category\"\r\n\t\t\t\t\t\t\t     label=\"Single select\"\r\n\t\t\t\t\t\t\t    />\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label for=\"exampleFormControlInput1\" className=\"form-label\"> Savings Percentage </label>\r\n\t\t\t\t\t\t\t  <input \r\n\t\t\t\t\t\t\t     type=\"text\" \r\n\t\t\t\t\t\t\t     className=\"form-control\" \r\n\t\t\t\t\t\t\t     id=\"exampleFormControlInput1\"\r\n\t\t\t\t\t\t\t     value={data.percentage}\r\n\t\t\t\t\t\t\t     placeholder=\"Percentage\"\r\n\t\t\t\t\t\t\t     readonly=\"readonly\" \r\n\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label className=\"form-label\"> Coupon Name </label>\r\n\t\t\t\t\t\t\t    <Select \r\n\t\t\t\t\t\t\t     options={couponoptions} \r\n\t\t\t\t\t\t\t     onChange={InputEventCoupons}\r\n \t\t\t\t\t\t\t     value={couponoptions.filter(function(option) {\r\n\t\t\t\t\t\t          return option.label === data.coupon;\r\n\t\t\t\t\t\t         })} \r\n\t\t\t\t\t\t\t     placeholder=\"Name of Coupon\"\r\n\t\t\t\t\t\t\t     label=\"Single select\"\r\n\t\t\t\t\t\t\t    />\r\n\t\t\t\t\t\t  </div>\r\n  \t\t\t\t\t\t  <div className=\"mb-3\">\t\r\n\t  \t\t\t\t\t\t  <label for=\"exampleFormControlInput1\" className=\"form-label\"> Coupon Code </label>\r\n\t\t\t\t\t\t\t  <input \r\n\t\t\t\t\t\t\t     type=\"text\" \r\n\t\t\t\t\t\t\t     className=\"form-control\" \r\n\t\t\t\t\t\t\t     id=\"exampleFormControlInput1\"\r\n\t\t\t\t\t\t\t     value={data.code}\r\n\t\t\t\t\t\t\t     placeholder=\"Code\"\r\n\t\t\t\t\t\t\t     readonly=\"readonly\" \r\n\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t  </div>\r\n\r\n\t\t\t\t\t\t  <div className=\"col-12\">\r\n\t\t\t\t\t\t\t  <button className=\"btn btn-outline-primary\" type=\"submit\"> Confirm Payment </button>\r\n\t\t\t\t\t\t  </div>\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PaymentMerchants;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\FinalPaymentContact.js",["191","192","193"],"import React from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport img from \"../images/piggybank.jpg\";\r\nimport Navbar from '../Navbar';\r\nimport Cookies from \"js-cookie\";\r\nimport LoginNavbar from '../LoginNavbar';\r\n\r\nconst FinalPaymentContact = () => {\r\n\r\n\tvar navChoice;\r\n\r\n\tif (Cookies.get(\"user\")) { \r\n\t\tnavChoice = <LoginNavbar />;\r\n\t}\r\n\telse {\r\n\t\tnavChoice = <Navbar />;\r\n\t}\t\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const state = location.state;\r\n\r\n    const formSubmit = (e) => {\r\n\r\n    \t  e.preventDefault();\r\n\r\n\t\t  const options = {    \r\n\t\t\t\tkey: 'rzp_test_5kt38WvQ1V05jk',     \r\n\t\t\t\tname: state[0].name,    \r\n\t\t\t\tdescription: \"Transaction to Contact\",    \r\n\t\t\t\timage: img,    \r\n\t\t\t\torder_id: state[0].order_id,\r\n\t\t\t    handler: async (response) => {\r\n\t\t\t      try {\r\n\t\t\t       const paymentId = response.razorpay_payment_id;\r\n\t\t\t       const orderId = response.razorpay_order_id;\r\n\t\t\t       const signature = response.razorpay_signarure;\r\n\t\t\t       alert(`Payment Successful`);\r\n   \t\t  \t\t   let path = \"/successpayment\"; \r\n\t\t\t\t   history.push(path);\r\n\t\t\t      }   catch (err) {\r\n\t\t\t        console.log(err);\r\n\t\t\t      }\r\n\t\t\t    },\r\n\t\t\t\tprefill: {        \r\n\t\t\t\t\tname: state[0].username,       \r\n\t\t\t\t\temail: state[0].email,        \r\n\t\t\t\t\tcontact: state[0].contact   \r\n\t\t\t\t},     \r\n\t\t\t\ttheme: {        \r\n\t\t\t\t\tcolor: \"#3399cc\"    \r\n\t\t\t\t}\r\n\t      };\r\n\r\n\t      const rzp1 = new window.Razorpay(options);\r\n\r\n\t      rzp1.open();\r\n\r\n    };\r\n\r\n\t\treturn (\r\n\t\t<>\r\n\t\t    {navChoice}\r\n\t\t\t<div className=\"my-5\">\r\n\t\t\t\t<h1 className=\"text-center\"> Confirm Payment </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container contact_div\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-6 col-10 mx-auto\">\r\n\t\t\t\t\t\t<form onSubmit={formSubmit}>\t\t\t\t\t\t\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\r\n\t\t\t\t\t\t      <h4> Payee Name: {state[0].name} </h4><br></br>\r\n\t\t\t\t\t\t      <h4> Payee UPI ID: {state[0].upi_id} </h4><br></br>\r\n\t\t\t\t\t\t      <h4> Payee Phone Number: {state[0].phone_number} </h4><br></br>\r\n\t\t\t\t\t\t      <h4> Category: {state[0].category} </h4><br></br>\r\n\t\t\t\t\t\t      <h4> Savings: {state[0].saving} </h4><br></br>\r\n                              <h4> Final Amount: {state[0].amount} </h4><br></br>\r\n                          </div>\r\n\t\t\t\t\t\t  <div className=\"col-12\">\r\n\t\t\t\t\t\t\t  <button className=\"btn btn-outline-primary\" type=\"submit\"> Pay Now </button>\r\n\t\t\t\t\t\t  </div>\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FinalPaymentContact;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\ErrorPage.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\FinalPaymentMerchant.js",["194"],"import React from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport img from \"../images/piggybank.jpg\";\r\nimport Navbar from '../Navbar';\r\nimport Cookies from \"js-cookie\";\r\nimport LoginNavbar from '../LoginNavbar';\r\n\r\nconst FinalPaymentMerchant = () => {\r\n\r\n\tvar navChoice;\r\n\r\n\tif (Cookies.get(\"user\")) { \r\n\t\tnavChoice = <LoginNavbar />;\r\n\t}\r\n\telse {\r\n\t\tnavChoice = <Navbar />;\r\n\t}\t\r\n\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const state = location.state;\r\n\r\n    const formSubmit = (e) => {\r\n\r\n    \t  e.preventDefault();\r\n\r\n\t\t  const options = {    \r\n\t\t\t\tkey: 'rzp_test_5kt38WvQ1V05jk',     \r\n\t\t\t\tname: state[0].name,    \r\n\t\t\t\tdescription: \"Transaction to Merchant\",    \r\n\t\t\t\timage: img,    \r\n\t\t\t\torder_id: state[0].order_id,\r\n\t\t\t    handler: async (response) => {\r\n\t\t\t      try {\r\n\t\t\t       console.log(response)\t\r\n\t\t\t       const paymentId = response.razorpay_payment_id;\r\n\t\t\t       const orderId = response.razorpay_order_id;\r\n\t\t\t       const signature = response.razorpay_signature;\r\n\t\t\t       alert(`Payment Successful`);\r\n\t       \t\t  \r\n\t       \t\t   const res = fetch(\"/successful_payment\", {\r\n\t\t\t\t\t   method: 'POST',\r\n\t\t\t\t\t   headers: {\r\n\t\t\t\t\t\t\t 'Content-Type': 'application/json'\r\n\t\t\t\t\t   },\r\n\t\t\t\t\t   body: JSON.stringify({\r\n\t\t\t\t\t\t\t  razorpay_payment_id: paymentId,\r\n\t\t\t\t\t\t\t  razorpay_order_id: orderId,\r\n\t\t\t\t\t\t\t  razorpay_signature: signature,\r\n\t\t\t\t\t\t\t  success: true\r\n\t\t\t\t\t   })\r\n\t\t\t\t   });\r\n\r\n\t\t\t\t   console.log(res)\r\n\r\n   \t\t  \t\t   let path = \"/successpayment\"; \r\n\t\t\t\t   history.push(path);\r\n\t\t\t      }   catch (err) {\r\n\t\t\t      \tconsole.log(response);\r\n\t\t\t        console.log(err);\r\n\t\t\t      }\r\n\t\t\t    },\r\n\t\t\t\tprefill: {        \r\n\t\t\t\t\tname: state[0].username,       \r\n\t\t\t\t\temail: state[0].email,        \r\n\t\t\t\t\tcontact: state[0].contact   \r\n\t\t\t\t},     \r\n\t\t\t\ttheme: {        \r\n\t\t\t\t\tcolor: \"#3399cc\"    \r\n\t\t\t\t}\r\n\t      };\r\n\r\n\t      const rzp1 = new window.Razorpay(options);\r\n\r\n\t      rzp1.open();\r\n\r\n\t      {/*rzp1.on('payment.failed', function (response){\r\n\t\t    alert(response.error.code);\r\n\t\t    alert(response.error.description);\r\n\t\t    alert(response.error.source);\r\n\t\t    alert(response.error.step);\r\n\t\t    alert(response.error.reason);\r\n\t\t    alert(response.error.metadata.order_id);\r\n\t\t    alert(response.error.metadata.payment_id);\r\n\t\t});*/}\r\n\r\n\r\n    };\r\n\r\n\t\treturn (\r\n\t\t<>\r\n\t\t    {navChoice}\r\n\t\t\t<div className=\"my-5\">\r\n\t\t\t\t<h1 className=\"text-center\"> Confirm Payment </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container contact_div\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-6 col-10 mx-auto\">\r\n\t\t\t\t\t\t<form onSubmit={formSubmit}>\t\t\t\t\t\t\r\n\t\t\t\t\t\t  <div className=\"mb-3\">\r\n\t\t\t\t\t\t      <h4> Merchant Name: {state[0].name} </h4><br></br>\r\n\t\t\t\t\t\t      <h4> Category: {state[0].category} </h4><br></br>\r\n\t\t\t\t\t\t      <h4> Savings: {state[0].saving} </h4><br></br>\r\n                              <h4> Final Amount: {state[0].amount} </h4><br></br>\r\n                          </div>\r\n\t\t\t\t\t\t  <div className=\"col-12\">\r\n\t\t\t\t\t\t\t  <button className=\"btn btn-outline-primary\" type=\"submit\"> Pay Now </button>\r\n\t\t\t\t\t\t  </div>\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FinalPaymentMerchant;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\components\\SuccessPayment.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\config.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\LoginNavbar.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\TransactionHistory.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\TransactionHistoryData.js",["195","196","197","198","199","200"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport \"./Main.css\";\r\n\r\nconst TransactionHistoryData = () => {\r\n\r\n    const [data, setData] = useState({\r\n      transaction_id:'',\r\n      paid_to:'',\r\n      amount:'',\r\n      status:'',\r\n      date:'',\r\n    });\r\n\r\n    const user_id = 0;\r\n\r\n    const [transactiondata, setTransactiondata] = useState({});\r\n\r\n    const transactions = [];\r\n    let transactionmap = new Map();\r\n\r\n    async function get_transactions() {\r\n      const res = fetch(`/list/transactions?userid=${user_id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n\r\n      res.then(response => response.json()).then(data => setTransactiondata(data));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      get_transactions();\r\n\r\n    }, []);\r\n\r\n\r\n    for(var itr = 0; itr < transactiondata.length; ++itr)\r\n    { \r\n      transactions.push({label: transactiondata[itr].transaction_id, value: transactiondata[itr].transaction_id});\r\n      transactionmap.set(transactiondata[itr].transaction_id, itr);\r\n    }\r\n\r\n    const InputEventTransaction = (event) => {\r\n      \r\n      const { label, value } = event;\r\n      var index = transactionmap.get(value);\r\n            \r\n        setData((preVal) => {\r\n            return {\r\n                ...preVal,\r\n                [\"transaction_id\"]: value,\r\n                [\"paid_to\"]: transactiondata[index].paid_to,\r\n                [\"amount\"]: transactiondata[index].total_amount,\r\n                [\"status\"]: transactiondata[index].transaction_status,\r\n                [\"date\"]: transactiondata[index].tranaction_at,\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"main__container\">\r\n        <div className=\"my-5\">\r\n          <h1 className=\"text-center\"> Transaction History </h1>\r\n        </div>\r\n        <div className=\"container contact_div\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-10 mx-auto\">\r\n              <form>\r\n                <div className=\"mb-3\">  \r\n                    <label className=\"form-label\"> Transaction ID </label>\r\n                    <Select \r\n                     options={transactions} \r\n                     onChange={InputEventTransaction}\r\n                     value={transactions.filter(function(option) {\r\n                        return option.label === data.transaction_id;\r\n                       })} \r\n                     placeholder=\"Transaction ID\"\r\n                     label=\"Single select\"\r\n                    />\r\n                </div>            \r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Paid To </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.paid_to}\r\n                       placeholder=\"Name of Payee\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Amount </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.amount}\r\n                       placeholder=\"Amount\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Transaction Time </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.date}\r\n                       placeholder=\"Time\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Status </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.status}\r\n                       placeholder=\"Status\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>                                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>      \r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TransactionHistoryData;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Expenditure.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\ExpenditureData.js",["201","202","203","204","205"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport \"./Main.css\";\r\n\r\nconst ExpenditureData = () => {\r\n\r\n    const [data, setData] = useState({\r\n      transaction_id:'',\r\n      category:'',\r\n      expenditure:'',\r\n      date:'',\r\n    });\r\n\r\n    const user_id = 0;\r\n\r\n    const [transactiondata, setTransactiondata] = useState({});\r\n\r\n    const transactions = [];\r\n    let transactionmap = new Map();\r\n\r\n    async function get_transactions() {\r\n      const res = fetch(`/list/transactions?userid=${user_id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n\r\n      res.then(response => response.json()).then(data => setTransactiondata(data));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      get_transactions();\r\n\r\n    }, []);\r\n\r\n\r\n    for(var itr = 0; itr < transactiondata.length; ++itr)\r\n    { \r\n      if(transactiondata[itr].transaction_status === 'success')\r\n      { transactions.push({label: transactiondata[itr].transaction_id, value: transactiondata[itr].transaction_id});\r\n        transactionmap.set(transactiondata[itr].transaction_id, itr);\r\n      }\r\n    }\r\n\r\n    const InputEventTransaction = (event) => {\r\n      \r\n      const { label, value } = event;\r\n      var index = transactionmap.get(value);\r\n            \r\n        setData((preVal) => {\r\n            return {\r\n                ...preVal,\r\n                [\"transaction_id\"]: value,\r\n                [\"category\"]: transactiondata[index].category,\r\n                [\"expenditure\"]: transactiondata[index].expenditure,\r\n                [\"date\"]: transactiondata[index].tranaction_at,\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"main__container\">\r\n        <div className=\"my-5\">\r\n          <h1 className=\"text-center\"> Expenditures </h1>\r\n        </div>\r\n        <div className=\"container contact_div\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-10 mx-auto\">\r\n              <form>\r\n                <div className=\"mb-3\">  \r\n                    <label className=\"form-label\"> Transaction ID </label>\r\n                    <Select \r\n                     options={transactions} \r\n                     onChange={InputEventTransaction}\r\n                     value={transactions.filter(function(option) {\r\n                        return option.label === data.transaction_id;\r\n                       })} \r\n                     placeholder=\"Transaction ID\"\r\n                     label=\"Single select\"\r\n                    />\r\n                </div>            \r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Category </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.category}\r\n                       placeholder=\"Category\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Expenditure </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.expenditure}\r\n                       placeholder=\"Expenditure\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Transaction Time </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.date}\r\n                       placeholder=\"Time\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>                               \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>      \r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ExpenditureData;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Saving.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\SavingData.js",["206","207","208","209","210"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport \"./Main.css\";\r\n\r\nconst SavingData = () => {\r\n\r\n    const [data, setData] = useState({\r\n      transaction_id:'',\r\n      category:'',\r\n      saving:'',\r\n      date:'',\r\n    });\r\n\r\n    const user_id = 0;\r\n\r\n    const [transactiondata, setTransactiondata] = useState({});\r\n\r\n    const transactions = [];\r\n    let transactionmap = new Map();\r\n\r\n    async function get_transactions() {\r\n      const res = fetch(`/list/transactions?userid=${user_id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n\r\n      res.then(response => response.json()).then(data => setTransactiondata(data));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      get_transactions();\r\n\r\n    }, []);\r\n\r\n\r\n    for(var itr = 0; itr < transactiondata.length; ++itr)\r\n    { \r\n      if(transactiondata[itr].transaction_status === 'success')\r\n      { transactions.push({label: transactiondata[itr].transaction_id, value: transactiondata[itr].transaction_id});\r\n        transactionmap.set(transactiondata[itr].transaction_id, itr);\r\n      }\r\n    }\r\n\r\n    const InputEventTransaction = (event) => {\r\n      \r\n      const { label, value } = event;\r\n      var index = transactionmap.get(value);\r\n            \r\n        setData((preVal) => {\r\n            return {\r\n                ...preVal,\r\n                [\"transaction_id\"]: value,\r\n                [\"category\"]: transactiondata[index].category,\r\n                [\"saving\"]: transactiondata[index].saving,\r\n                [\"date\"]: transactiondata[index].tranaction_at,\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"main__container\">\r\n        <div className=\"my-5\">\r\n          <h1 className=\"text-center\"> Savings </h1>\r\n        </div>\r\n        <div className=\"container contact_div\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-10 mx-auto\">\r\n              <form>\r\n                <div className=\"mb-3\">  \r\n                    <label className=\"form-label\"> Transaction ID </label>\r\n                    <Select \r\n                     options={transactions} \r\n                     onChange={InputEventTransaction}\r\n                     value={transactions.filter(function(option) {\r\n                        return option.label === data.transaction_id;\r\n                       })} \r\n                     placeholder=\"Transaction ID\"\r\n                     label=\"Single select\"\r\n                    />\r\n                </div>            \r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Category </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.category}\r\n                       placeholder=\"Category\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Saving </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.saving}\r\n                       placeholder=\"Saving\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Transaction Time </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.date}\r\n                       placeholder=\"Time\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>                               \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>      \r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SavingData;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Query.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\QueryData.js",["211","212","213","214"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport Cookies from 'js-cookie';\r\nimport \"./Main.css\";\r\n\r\nconst QueryData = () => {\r\n\r\n    const [data, setData] = useState({\r\n      transaction_id:'',\r\n      query_msg:'',\r\n    });\r\n\r\n    const user_id = Cookies.get(\"userid\");\r\n\r\n    const [transactiondata, setTransactiondata] = useState({});\r\n\r\n    const transactions = [];\r\n\r\n    async function get_querytransactions() {\r\n      const res = fetch(`/list/querytransaction?userid=${user_id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n\r\n      res.then(response => response.json()).then(data => setTransactiondata(data));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      get_querytransactions();\r\n\r\n    }, []);\r\n\r\n\r\n    for(var itr = 0; itr < transactiondata.length; ++itr)\r\n    transactions.push({label: transactiondata[itr].id, value: transactiondata[itr].id});\r\n\r\n    const InputEventTransaction = (event) => {\r\n      \r\n      const { label, value } = event;\r\n\r\n      const transaction_detail = fetch(`/query?transaction_id=${value}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n      });\r\n\r\n      transaction_detail.then(function(res) { \r\n        return res.json();\r\n      }).then(res_data => {\r\n            \r\n            setData((preVal) => {\r\n                return {\r\n                    ...preVal,\r\n                    [\"transaction_id\"]: value,\r\n                    [\"query_msg\"]: res_data.msg,\r\n                };\r\n            });\r\n\r\n      });\r\n\r\n    };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"main__container\">\r\n        <div className=\"my-5\">\r\n          <h1 className=\"text-center\"> Queries </h1>\r\n        </div>\r\n        <div className=\"container contact_div\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-10 mx-auto\">\r\n              <form>\r\n                <div className=\"mb-3\">  \r\n                    <label className=\"form-label\"> Transaction ID </label>\r\n                    <Select \r\n                     options={transactions} \r\n                     onChange={InputEventTransaction}\r\n                     value={transactions.filter(function(option) {\r\n                        return option.label === data.transaction_id;\r\n                       })} \r\n                     placeholder=\"Transaction ID\"\r\n                     label=\"Single select\"\r\n                    />\r\n                </div>            \r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Query Message </label>\r\n                    <textarea \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       rows=\"3\"\r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.query_msg}\r\n                       placeholder=\"Query\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>      \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>      \r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default QueryData;","C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\Setting.js",[],"C:\\Users\\Sachin\\Documents\\Software Engineering Project\\project\\src\\dashboardcomponents\\main\\SettingData.js",["215","216","217","218","219","220","221","222","223","224"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport \"./Main.css\";\r\n\r\nconst SettingData = () => {\r\n\r\n    const [data, setData] = useState({\r\n      locking_period:'',\r\n      new_locking_period:'',\r\n      category:'',\r\n      category_id:'',\r\n      percentage:'',\r\n      new_percentage:'',\r\n    });\r\n\r\n    const user_id = 0;\r\n\r\n    const [categdata, setCategdata] = useState({});\r\n\r\n    const categoptions = [];\r\n    let categmap = new Map(); \r\n\r\n    async function get_category() {\r\n      const res = fetch(`/list/category?userid=${user_id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n\r\n      res.then(response => response.json()).then(data => setCategdata(data));\r\n\r\n    }\r\n\r\n    async function get_lockingperiod() {\r\n      const res = fetch(`/list/locking_period?userid=${user_id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n\r\n      res.then(response => response.json()).then(res_data =>  {     \r\n\r\n        setData((preVal) => {\r\n            return {\r\n                ...preVal,\r\n                [\"locking_period\"]: res_data.locking_period,\r\n            };\r\n\r\n        });\r\n\r\n      });\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      get_category();\r\n      get_lockingperiod();\r\n\r\n    }, []);\r\n\r\n\r\n    for(var itr = 0; itr < categdata.length; ++itr)\r\n    { \r\n       categoptions.push({label: categdata[itr].category_name, value: categdata[itr].percentage});\r\n       categmap.set(categdata[itr].category_name, categdata[itr].category_id);\r\n    }\r\n\r\n    const InputEventCategory = (event) => {\r\n      \r\n        const { label, value } = event;\r\n        \r\n        setData((preVal) => {\r\n            return {\r\n                ...preVal,\r\n                [\"category\"]: label,\r\n                [\"percentage\"]: value + '%',\r\n                [\"category_id\"]: categmap.get(label),\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    const InputEventLockingPeriod = (event) => {\r\n      \r\n      const { name, value } = event.target;\r\n\r\n      setData((preVal) => {\r\n          return {\r\n              ...preVal,\r\n              [name]: value,\r\n          };\r\n\r\n      });\r\n\r\n    };\r\n\r\n    const InputEventPercentage = (event) => {\r\n      \r\n      const { name, value } = event.target;\r\n\r\n      setData((preVal) => {\r\n          return {\r\n              ...preVal,\r\n              [name]: value,\r\n          };\r\n\r\n      });\r\n\r\n    };\r\n\r\n    const UpdateLocking = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      const res = fetch(\"/update/locking_period\", {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n                 userid: user_id,\r\n                 locking_period: data.new_locking_period\r\n              })\r\n      });\r\n\r\n      res.then(response => response.json()).then(res_data =>  {\r\n          \r\n          console.log(res_data);\r\n\r\n          if(res_data.success === true)\r\n          {\r\n            alert(`Successfully Updated Locking Period`);\r\n                  setData((preVal) => {\r\n                    return {\r\n                        ...preVal,\r\n                        [\"locking_period\"]: data.new_locking_period,\r\n                        [\"new_locking_period\"]: '',\r\n                    };\r\n\r\n                });\r\n\r\n          }\r\n          else\r\n          {\r\n             alert(`Please Try Again`); \r\n\r\n             setData((preVal) => {\r\n                    return {\r\n                        ...preVal,\r\n                        [\"new_locking_period\"]: '',\r\n                    };\r\n\r\n              });\r\n\r\n          }\r\n\r\n\r\n      });\r\n\r\n};\r\n\r\n    const UpdatePercentage = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      const res = fetch(\"/update/saving_percentage\", {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n                 userid: user_id,\r\n                 saving_percentage: data.new_percentage,\r\n                 category_id: data.category_id\r\n              })\r\n      });\r\n\r\n      res.then(response => response.json()).then(res_data =>  {\r\n          \r\n          console.log(res_data);\r\n\r\n          if(res_data.success === true)\r\n          {\r\n            alert(`Successfully Updated Saving Percentage`);\r\n                  setData((preVal) => {\r\n                    return {\r\n                        ...preVal,\r\n                        [\"percentage\"]: data.new_percentage + '%',\r\n                        [\"new_percentage\"]: '',\r\n                    };\r\n\r\n                });\r\n\r\n          }\r\n          else\r\n          {\r\n             alert(`Please Try Again`); \r\n\r\n             setData((preVal) => {\r\n                    return {\r\n                        ...preVal,\r\n                        [\"new_percentage\"]: '',\r\n                    };\r\n\r\n              });\r\n\r\n          }\r\n\r\n\r\n      });\r\n\r\n};\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"main__container\">\r\n        <div className=\"my-5\">\r\n          <h1 className=\"text-center\"> Preferences </h1>\r\n        </div>\r\n        <div className=\"container contact_div\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-10 mx-auto\">\r\n              <form onSubmit={UpdateLocking}>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Locking Period </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.locking_period}\r\n                       placeholder=\"Locking Period (in Days)\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> New Locking Period </label>\r\n                    <input \r\n                       type=\"number\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       name=\"new_locking_period\"\r\n                       value={data.new_locking_period}\r\n                       onChange={InputEventLockingPeriod} \r\n                       placeholder=\"New Locking Period (in Days)\"\r\n                    />\r\n                </div> \r\n                <div className=\"col-12\">\r\n                  <button className=\"btn btn-outline-primary\" type=\"submit\"> Update Locking Period </button>\r\n                </div>\r\n                <br/>             \r\n                <div className=\"mb-3\">  \r\n                    <label className=\"form-label\"> Category </label>\r\n                    <Select \r\n                     options={categoptions} \r\n                     onChange={InputEventCategory}\r\n                     value={categoptions.filter(function(option) {\r\n                        return option.label === data.category;\r\n                       })} \r\n                     placeholder=\"Category\"\r\n                     label=\"Single select\"\r\n                    />\r\n                </div>\r\n              </form>\r\n              <form onSubmit={UpdatePercentage}>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> Saving Percentage </label>\r\n                    <input \r\n                       type=\"text\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       value={data.percentage}\r\n                       placeholder=\"Saving Percentage\"\r\n                       readonly=\"readonly\" \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">  \r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"> New Saving Percentage </label>\r\n                    <input \r\n                       type=\"number\" \r\n                       className=\"form-control\" \r\n                       id=\"exampleFormControlInput1\"\r\n                       name=\"new_percentage\"\r\n                       value={data.new_percentage}\r\n                       onChange={InputEventPercentage} \r\n                       placeholder=\"New Saving Percentage\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <button className=\"btn btn-outline-primary\" type=\"submit\"> Update Saving Percentage </button>\r\n                </div>                                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>      \r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SettingData;",{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"225","replacedBy":"229"},{"ruleId":"227","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":54,"column":5,"nodeType":"233","endLine":54,"endColumn":7,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":83,"column":14,"nodeType":"237","messageId":"238","endLine":83,"endColumn":33,"fix":"239"},{"ruleId":"235","severity":1,"message":"240","line":84,"column":14,"nodeType":"237","messageId":"238","endLine":84,"endColumn":41,"fix":"241"},{"ruleId":"235","severity":1,"message":"242","line":85,"column":14,"nodeType":"237","messageId":"238","endLine":85,"endColumn":50,"fix":"243"},{"ruleId":"235","severity":1,"message":"244","line":98,"column":14,"nodeType":"237","messageId":"238","endLine":98,"endColumn":33,"fix":"245"},{"ruleId":"246","severity":1,"message":"247","line":110,"column":28,"nodeType":"248","messageId":"249","endLine":110,"endColumn":30},{"ruleId":"250","severity":1,"message":"251","line":68,"column":12,"nodeType":"252","messageId":"253","endLine":68,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":99,"column":5,"nodeType":"233","endLine":99,"endColumn":7,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":107,"column":13,"nodeType":"252","messageId":"257","endLine":107,"endColumn":16},{"ruleId":"235","severity":1,"message":"258","line":136,"column":14,"nodeType":"237","messageId":"238","endLine":136,"endColumn":33,"fix":"259"},{"ruleId":"235","severity":1,"message":"260","line":137,"column":14,"nodeType":"237","messageId":"238","endLine":137,"endColumn":36,"fix":"261"},{"ruleId":"235","severity":1,"message":"262","line":150,"column":14,"nodeType":"237","messageId":"238","endLine":150,"endColumn":26,"fix":"263"},{"ruleId":"235","severity":1,"message":"236","line":175,"column":14,"nodeType":"237","messageId":"238","endLine":175,"endColumn":33,"fix":"264"},{"ruleId":"235","severity":1,"message":"240","line":176,"column":14,"nodeType":"237","messageId":"238","endLine":176,"endColumn":41,"fix":"265"},{"ruleId":"235","severity":1,"message":"242","line":177,"column":14,"nodeType":"237","messageId":"238","endLine":177,"endColumn":50,"fix":"266"},{"ruleId":"235","severity":1,"message":"267","line":190,"column":14,"nodeType":"237","messageId":"238","endLine":190,"endColumn":31,"fix":"268"},{"ruleId":"235","severity":1,"message":"269","line":191,"column":14,"nodeType":"237","messageId":"238","endLine":191,"endColumn":49,"fix":"270"},{"ruleId":"235","severity":1,"message":"262","line":192,"column":14,"nodeType":"237","messageId":"238","endLine":192,"endColumn":29,"fix":"271"},{"ruleId":"250","severity":1,"message":"272","line":36,"column":17,"nodeType":"252","messageId":"253","endLine":36,"endColumn":26},{"ruleId":"250","severity":1,"message":"273","line":37,"column":17,"nodeType":"252","messageId":"253","endLine":37,"endColumn":24},{"ruleId":"250","severity":1,"message":"274","line":38,"column":17,"nodeType":"252","messageId":"253","endLine":38,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":79,"column":8,"nodeType":"277","messageId":"278","endLine":87,"endColumn":9},{"ruleId":"250","severity":1,"message":"279","line":49,"column":15,"nodeType":"252","messageId":"253","endLine":49,"endColumn":20},{"ruleId":"235","severity":1,"message":"280","line":55,"column":17,"nodeType":"237","messageId":"238","endLine":55,"endColumn":42,"fix":"281"},{"ruleId":"235","severity":1,"message":"282","line":56,"column":17,"nodeType":"237","messageId":"238","endLine":56,"endColumn":60,"fix":"283"},{"ruleId":"235","severity":1,"message":"284","line":57,"column":17,"nodeType":"237","messageId":"238","endLine":57,"endColumn":64,"fix":"285"},{"ruleId":"235","severity":1,"message":"286","line":58,"column":17,"nodeType":"237","messageId":"238","endLine":58,"endColumn":70,"fix":"287"},{"ruleId":"235","severity":1,"message":"288","line":59,"column":17,"nodeType":"237","messageId":"238","endLine":59,"endColumn":63,"fix":"289"},{"ruleId":"250","severity":1,"message":"279","line":50,"column":15,"nodeType":"252","messageId":"253","endLine":50,"endColumn":20},{"ruleId":"235","severity":1,"message":"280","line":56,"column":17,"nodeType":"237","messageId":"238","endLine":56,"endColumn":42,"fix":"290"},{"ruleId":"235","severity":1,"message":"236","line":57,"column":17,"nodeType":"237","messageId":"238","endLine":57,"endColumn":62,"fix":"291"},{"ruleId":"235","severity":1,"message":"292","line":58,"column":17,"nodeType":"237","messageId":"238","endLine":58,"endColumn":68,"fix":"293"},{"ruleId":"235","severity":1,"message":"288","line":59,"column":17,"nodeType":"237","messageId":"238","endLine":59,"endColumn":63,"fix":"294"},{"ruleId":"250","severity":1,"message":"279","line":50,"column":15,"nodeType":"252","messageId":"253","endLine":50,"endColumn":20},{"ruleId":"235","severity":1,"message":"280","line":56,"column":17,"nodeType":"237","messageId":"238","endLine":56,"endColumn":42,"fix":"295"},{"ruleId":"235","severity":1,"message":"236","line":57,"column":17,"nodeType":"237","messageId":"238","endLine":57,"endColumn":62,"fix":"296"},{"ruleId":"235","severity":1,"message":"297","line":58,"column":17,"nodeType":"237","messageId":"238","endLine":58,"endColumn":58,"fix":"298"},{"ruleId":"235","severity":1,"message":"288","line":59,"column":17,"nodeType":"237","messageId":"238","endLine":59,"endColumn":63,"fix":"299"},{"ruleId":"231","severity":1,"message":"300","line":35,"column":8,"nodeType":"233","endLine":35,"endColumn":10,"suggestions":"301"},{"ruleId":"250","severity":1,"message":"279","line":43,"column":15,"nodeType":"252","messageId":"253","endLine":43,"endColumn":20},{"ruleId":"235","severity":1,"message":"280","line":59,"column":21,"nodeType":"237","messageId":"238","endLine":59,"endColumn":46,"fix":"302"},{"ruleId":"235","severity":1,"message":"303","line":60,"column":21,"nodeType":"237","messageId":"238","endLine":60,"endColumn":48,"fix":"304"},{"ruleId":"235","severity":1,"message":"305","line":48,"column":17,"nodeType":"237","messageId":"238","endLine":48,"endColumn":60,"fix":"306"},{"ruleId":"235","severity":1,"message":"236","line":79,"column":17,"nodeType":"237","messageId":"238","endLine":79,"endColumn":36,"fix":"307"},{"ruleId":"235","severity":1,"message":"240","line":80,"column":17,"nodeType":"237","messageId":"238","endLine":80,"endColumn":44,"fix":"308"},{"ruleId":"235","severity":1,"message":"242","line":81,"column":17,"nodeType":"237","messageId":"238","endLine":81,"endColumn":53,"fix":"309"},{"ruleId":"235","severity":1,"message":"305","line":140,"column":25,"nodeType":"237","messageId":"238","endLine":140,"endColumn":68,"fix":"310"},{"ruleId":"235","severity":1,"message":"311","line":141,"column":25,"nodeType":"237","messageId":"238","endLine":141,"endColumn":51,"fix":"312"},{"ruleId":"235","severity":1,"message":"311","line":154,"column":25,"nodeType":"237","messageId":"238","endLine":154,"endColumn":51,"fix":"313"},{"ruleId":"235","severity":1,"message":"240","line":192,"column":25,"nodeType":"237","messageId":"238","endLine":192,"endColumn":66,"fix":"314"},{"ruleId":"235","severity":1,"message":"315","line":193,"column":25,"nodeType":"237","messageId":"238","endLine":193,"endColumn":47,"fix":"316"},{"ruleId":"235","severity":1,"message":"315","line":206,"column":25,"nodeType":"237","messageId":"238","endLine":206,"endColumn":47,"fix":"317"},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],["318"],["319"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_category'. Either include it or remove the dependency array.","ArrayExpression",["320"],"no-useless-computed-key","Unnecessarily computed property [\"category\"] found.","Property","unnecessarilyComputedProperty",{"range":"321","text":"322"},"Unnecessarily computed property [\"percentage\"] found.",{"range":"323","text":"324"},"Unnecessarily computed property [\"category_id\"] found.",{"range":"325","text":"326"},"Unnecessarily computed property [\"phonenum\"] found.",{"range":"327","text":"328"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'coupondata' is assigned a value but never used.","Identifier","unusedVar",["329"],"no-redeclare","'itr' is already defined.","redeclared","Unnecessarily computed property [\"merchant\"] found.",{"range":"330","text":"331"},"Unnecessarily computed property [\"merchant_id\"] found.",{"range":"332","text":"333"},"Unnecessarily computed property [\"code\"] found.",{"range":"334","text":"335"},{"range":"336","text":"322"},{"range":"337","text":"324"},{"range":"338","text":"326"},"Unnecessarily computed property [\"coupon\"] found.",{"range":"339","text":"340"},"Unnecessarily computed property [\"coupon_id\"] found.",{"range":"341","text":"342"},{"range":"343","text":"335"},"'paymentId' is assigned a value but never used.","'orderId' is assigned a value but never used.","'signature' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'label' is assigned a value but never used.","Unnecessarily computed property [\"transaction_id\"] found.",{"range":"344","text":"345"},"Unnecessarily computed property [\"paid_to\"] found.",{"range":"346","text":"347"},"Unnecessarily computed property [\"amount\"] found.",{"range":"348","text":"349"},"Unnecessarily computed property [\"status\"] found.",{"range":"350","text":"351"},"Unnecessarily computed property [\"date\"] found.",{"range":"352","text":"353"},{"range":"354","text":"345"},{"range":"355","text":"322"},"Unnecessarily computed property [\"expenditure\"] found.",{"range":"356","text":"357"},{"range":"358","text":"353"},{"range":"359","text":"345"},{"range":"360","text":"322"},"Unnecessarily computed property [\"saving\"] found.",{"range":"361","text":"362"},{"range":"363","text":"353"},"React Hook useEffect has a missing dependency: 'get_querytransactions'. Either include it or remove the dependency array.",["364"],{"range":"365","text":"345"},"Unnecessarily computed property [\"query_msg\"] found.",{"range":"366","text":"367"},"Unnecessarily computed property [\"locking_period\"] found.",{"range":"368","text":"369"},{"range":"370","text":"322"},{"range":"371","text":"324"},{"range":"372","text":"326"},{"range":"373","text":"369"},"Unnecessarily computed property [\"new_locking_period\"] found.",{"range":"374","text":"375"},{"range":"376","text":"375"},{"range":"377","text":"324"},"Unnecessarily computed property [\"new_percentage\"] found.",{"range":"378","text":"379"},{"range":"380","text":"379"},"no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},[1893,1905],"\"category\"",[1928,1942],"\"percentage\"",[1971,1986],"\"category_id\"",[2208,2220],"\"phonenum\"",{"desc":"381","fix":"383"},[3405,3417],"\"merchant\"",[3440,3455],"\"merchant_id\"",[3739,3747],"\"code\"",[4435,4447],[4470,4484],[4513,4528],[4769,4779],"\"coupon\"",[4802,4815],"\"coupon_id\"",[4853,4861],[1378,1396],"\"transaction_id\"",[1422,1433],"\"paid_to\"",[1484,1494],"\"amount\"",[1550,1560],"\"status\"",[1622,1630],"\"date\"",[1437,1455],[1481,1493],[1545,1560],"\"expenditure\"",[1615,1623],[1427,1445],[1471,1483],[1535,1545],"\"saving\"",[1595,1603],{"desc":"384","fix":"385"},[1512,1530],[1560,1573],"\"query_msg\"",[1207,1225],"\"locking_period\"",[1856,1868],[1894,1908],[1940,1955],[3250,3268],[3320,3342],"\"new_locking_period\"",[3610,3632],[4514,4528],[4582,4600],"\"new_percentage\"",[4868,4886],"Update the dependencies array to be: [get_category]",{"range":"386","text":"387"},{"range":"388","text":"387"},"Update the dependencies array to be: [get_querytransactions]",{"range":"389","text":"390"},[1208,1210],"[get_category]",[2403,2405],[823,825],"[get_querytransactions]"]